// <auto-generated />
using System;
using CampusParty.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampusParty.Migrations
{
    [DbContext(typeof(CampusPartyContext))]
    partial class CampusPartyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CampusParty.Models.Ciudad", b =>
                {
                    b.Property<int>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiudadId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroHabitantes")
                        .HasColumnType("int");

                    b.Property<int>("NumeroUniversidades")
                        .HasColumnType("int");

                    b.HasKey("CiudadId");

                    b.ToTable("Ciudades");

                    b.HasData(
                        new
                        {
                            CiudadId = 1,
                            Nombre = "Medellín",
                            NumeroHabitantes = 1000000,
                            NumeroUniversidades = 100
                        });
                });

            modelBuilder.Entity("CampusParty.Models.Computador", b =>
                {
                    b.Property<int>("ComputadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComputadorId"), 1L, 1);

                    b.Property<int>("DiscoDuro")
                        .HasColumnType("int");

                    b.Property<int>("RAM")
                        .HasColumnType("int");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComputadorId");

                    b.ToTable("Computadores");
                });

            modelBuilder.Entity("CampusParty.Models.Equipo", b =>
                {
                    b.Property<int>("EquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipoId"), 1L, 1);

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipoId");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("CampusParty.Models.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventoId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventoId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("CampusParty.Models.Pabellon", b =>
                {
                    b.Property<int>("PabellonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PabellonId"), 1L, 1);

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<string>("Tematica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PabellonId");

                    b.HasIndex("EventoId");

                    b.ToTable("Pabellones");
                });

            modelBuilder.Entity("CampusParty.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            Nombre = "Admin"
                        },
                        new
                        {
                            RolId = 2,
                            Nombre = "User"
                        });
                });

            modelBuilder.Entity("CampusParty.Models.Sitio", b =>
                {
                    b.Property<int>("SitioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SitioId"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("PabellonId")
                        .HasColumnType("int");

                    b.HasKey("SitioId");

                    b.HasIndex("PabellonId");

                    b.ToTable("Sitios");
                });

            modelBuilder.Entity("CampusParty.Models.Software", b =>
                {
                    b.Property<int>("SoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("SoftwareId");

                    b.ToTable("Softwares");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Software");
                });

            modelBuilder.Entity("CampusParty.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("CiudadId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            CiudadId = 1,
                            Contraseña = "$2a$10$q/yp5XqJB6GCr/TEuzLsMOHnn.QmpSq7Isby.zy6N2Gl2agwPYDwm",
                            Correo = "admin@gmail.com",
                            Documento = "10001460",
                            FechaNacimiento = new DateTime(2022, 11, 26, 22, 15, 31, 117, DateTimeKind.Local).AddTicks(8492),
                            NombreCompleto = "Admin",
                            RolId = 1,
                            Telefono = "777"
                        });
                });

            modelBuilder.Entity("CampusParty.Models.UsuarioEvento", b =>
                {
                    b.Property<int>("UsuarioEventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioEventoId"), 1L, 1);

                    b.Property<string>("Carpa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Computador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estadia")
                        .HasColumnType("bit");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("SitioId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Vehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioEventoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioEventos");
                });

            modelBuilder.Entity("EquipoUsuarioEvento", b =>
                {
                    b.Property<int>("EquiposEquipoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioEventosUsuarioEventoId")
                        .HasColumnType("int");

                    b.HasKey("EquiposEquipoId", "UsuarioEventosUsuarioEventoId");

                    b.HasIndex("UsuarioEventosUsuarioEventoId");

                    b.ToTable("EquipoUsuarioEvento");
                });

            modelBuilder.Entity("CampusParty.Models.SoftwareEducativo", b =>
                {
                    b.HasBaseType("CampusParty.Models.Software");

                    b.Property<string>("Logros")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("SoftwareEducativo");
                });

            modelBuilder.Entity("CampusParty.Models.Videojuego", b =>
                {
                    b.HasBaseType("CampusParty.Models.Software");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScoreMax")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Videojuego");
                });

            modelBuilder.Entity("CampusParty.Models.Pabellon", b =>
                {
                    b.HasOne("CampusParty.Models.Evento", "Evento")
                        .WithMany("Pabellones")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("CampusParty.Models.Sitio", b =>
                {
                    b.HasOne("CampusParty.Models.Pabellon", "Pabellon")
                        .WithMany("Sitios")
                        .HasForeignKey("PabellonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pabellon");
                });

            modelBuilder.Entity("CampusParty.Models.Software", b =>
                {
                    b.HasOne("CampusParty.Models.Computador", "Computador")
                        .WithOne("Software")
                        .HasForeignKey("CampusParty.Models.Software", "SoftwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computador");
                });

            modelBuilder.Entity("CampusParty.Models.Usuario", b =>
                {
                    b.HasOne("CampusParty.Models.Ciudad", "Ciudad")
                        .WithMany("Usuarios")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampusParty.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("CampusParty.Models.UsuarioEvento", b =>
                {
                    b.HasOne("CampusParty.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EquipoUsuarioEvento", b =>
                {
                    b.HasOne("CampusParty.Models.Equipo", null)
                        .WithMany()
                        .HasForeignKey("EquiposEquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampusParty.Models.UsuarioEvento", null)
                        .WithMany()
                        .HasForeignKey("UsuarioEventosUsuarioEventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CampusParty.Models.Ciudad", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CampusParty.Models.Computador", b =>
                {
                    b.Navigation("Software")
                        .IsRequired();
                });

            modelBuilder.Entity("CampusParty.Models.Evento", b =>
                {
                    b.Navigation("Pabellones");
                });

            modelBuilder.Entity("CampusParty.Models.Pabellon", b =>
                {
                    b.Navigation("Sitios");
                });

            modelBuilder.Entity("CampusParty.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
